---
import { Image } from "astro:assets";
import type { ApiLogoLogo } from "../generated/contentTypes";
import fetchApi from "../lib/strapi";
const logo = await fetchApi<ApiLogoLogo>({
  endpoint: 'logo',
  wrappedByKey: 'data',
  query : {
	populate: '*'
  }
});
const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname;
type TLink = {
  name: string
  pathname: string 
}
const links: TLink[] = [
  {
    name: "home",
    pathname: "/"
  },
  {
    name: "contact",
    pathname: "/contact"
  },
  {
    name: "blog",
    pathname: "/blog"
  },
  {
    name: "careers",
    pathname: "/careers"
  }
];

---

<nav class="py-[22px] px-6 flex justify-between bg-white lg:relative lg:z-50 lg:px-32">
  <Image
  width="139"
         height="20"
  src={`${import.meta.env.STRAPI_URL}${logo.attributes.image.data.attributes.url}`} alt="logo" />
  <ul class="items-center gap-6 hidden lg:flex text-manatee-600">
    {
      links.map((link: TLink) => (
      <li class={`relative ${currentPath === link.pathname ? "active" : ""}`}>
      <a href={link.pathname}>{link.name}</a>
    </li>
      ))
    }
</ul>
<button class="bg-gradient-to-br from-malachite-500 to-shakespeare-400 hidden lg:block  py-2 font-bold text-sm text-white  px-[34px] rounded-full ">Request Invite</button>

  <svg
    id="btn-menu"
    class="lg:hidden"
    role="button"
    aria-label="Menu"
    tabindex="0"
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="lucide lucide-menu"
    ><line x1="4" x2="20" y1="12" y2="12"></line><line
      x1="4"
      x2="20"
      y1="6"
      y2="6"></line><line x1="4" x2="20" y1="18" y2="18"></line></svg
  >
  <div id="list-menu" class="absolute hidden lg:hidden top-[85px] inset-x-6 bg-white text-martinique-950 rounded-md">
    <ul class="flex flex-col items-center gap-6 py-8">
      {
        links.map((link: TLink) => (
        <li class={`relative ${currentPath === link.pathname ? "active" : ""}`}>
        <a href={link.pathname}>{link.name}</a>
      </li>
        ))
      }
    </ul>
  </div>
</nav>

<script>
    const btnMenu = document.getElementById('btn-menu');
    btnMenu?.addEventListener('click', () => {
        document.getElementById('list-menu')?.classList.toggle('hidden')
    })
</script>

<style>
  .active::after {
  content: '';
  position: absolute;
  top: 48px;
  right: 0;
  bottom: 0;
  left: 0;
  height: 4px;
  background-image: linear-gradient(to bottom right, #33D35E, #2AB6D9);
}
nav {
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
}
</style>